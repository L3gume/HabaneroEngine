//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDLight;           // Offset:    0, size:   64
    PointLight gPLight;                 // Offset:   64, size:   80
    float3  gEyePosW;                   // Offset:  144, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  128, size:   64
}

cbuffer cbPerObject2
{
    Material gMaterial;                 // Offset:    0, size:   48
}

//
// 3 local object(s)
//
SamplerState MeshTextureSampler
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(16);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D gDiffuseMap;
Texture2D gSpecMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Tech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyzw        1     NONE   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Normal.x; v1.y <- vin.Normal.y; v1.z <- vin.Normal.z; 
                //   v2.x <- vin.TexCoord.x; v2.y <- vin.TexCoord.y; 
                //   o3.x <- <VS return value>.UV.x; o3.y <- <VS return value>.UV.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; o1.w <- <VS return value>.PosW.w; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 53 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Generic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.PosW.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.PosW.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.PosW.z
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // r1.w <- vout.PosW.w
                
                #line 54
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.PosH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.PosH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.PosH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.PosH.w
                
                #line 55
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.NormalW.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.NormalW.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.NormalW.z
                
                #line 56
                mov r3.xy, v2.xyxx  // r3.x <- vout.UV.x; r3.y <- vout.UV.y
                
                #line 58
                mov o0.xyzw, r2.xyzw
                mov o1.xyzw, r1.xyzw
                mov o2.xyz, r0.xyzx
                mov o3.xy, r3.xyxx
                ret 
                // Approximately 19 instruction slots used
                            
            };
            HullShader = NULL;
            DomainShader = NULL;
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDLight;                         // Offset:    0 Size:    64
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //       float3 position;               // Offset:  112
                //       float range;                   // Offset:  124
                //       float3 att;                    // Offset:  128
                //       float pad;                     // Offset:  140
                //
                //   } gPLight;                         // Offset:   64 Size:    80
                //   float3 gEyePosW;                   // Offset:  144 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject2
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //
                //   } gMaterial;                       // Offset:    0 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // MeshTextureSampler                sampler      NA          NA             s0      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // gSpecMap                          texture  float4          2d             t1      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject2                      cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyzw        1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[10], immediateIndexed
                dcl_constantbuffer CB1[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; v1.w <- pin.PosW.w; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.UV.x; v3.y <- pin.UV.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 63 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Generic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // r0.x <- mat_d.x; r0.y <- mat_d.y; r0.z <- mat_d.z
                
                #line 64
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v3.xyxx, t1.xyzw, s0
                mov r1.xyz, r1.xyzx  // r1.x <- mat_s.x; r1.y <- mat_s.y; r1.z <- mat_s.z
                
                #line 67
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, v2.xyzx  // r2.x <- pin.NormalW.x; r2.y <- pin.NormalW.y; r2.z <- pin.NormalW.z
                
                #line 68
                mov r3.xyz, -v1.xyzx
                add r3.xyz, r3.xyzx, cb0[9].xyzx
                dp3 r0.w, r3.xyzx, r3.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, r3.xyzx  // r3.x <- ptoeye.x; r3.y <- ptoeye.y; r3.z <- ptoeye.z
                
                #line 70
                mov r4.xyz, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 71
                mov r5.xyz, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                
                #line 72
                mov r6.xyz, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z
                
                #line 75
                nop 
                mov r7.xyz, cb0[0].xyzx
                mov r8.xyz, cb0[1].xyzx
                mov r9.xyz, cb0[2].xyzx
                mov r0.w, cb0[2].w
                mov r10.xyz, cb0[3].xyzx
                mov r2.xyz, r2.xyzx
                mov r3.xyz, r3.xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 7 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\LightFuncs.fx"
                mov r11.xyz, l(0,0,0,0)  // r11.x <- spec.x; r11.y <- spec.y; r11.z <- spec.z
                
                #line 9
                dp3 r1.w, r10.xyzx, r2.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r12.xyz, r1.wwww, r2.xyzx
                add r12.xyz, r10.xyzx, r12.xyzx  // r12.x <- reflected.x; r12.y <- reflected.y; r12.z <- reflected.z
                
                #line 10
                dp3 r1.w, r12.xyzx, r12.xyzx
                rsq r1.w, r1.w
                mul r12.xyz, r1.wwww, r12.xyzx
                
                #line 12
                mov r10.xyz, -r10.xyzx
                dp3 r1.w, r10.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)  // r1.w <- diffuse_factor
                
                #line 13
                mul r8.xyz, r8.xyzx, r0.xyzx
                mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z
                
                #line 15
                lt r1.w, l(0.000000), r1.w
                if_nz r1.w
                
                #line 17
                  dp3 r1.w, r12.xyzx, r3.xyzx
                  max r1.w, r1.w, l(0.000000)
                  log r1.w, r1.w
                  mul r0.w, r0.w, r1.w
                  exp r0.w, r0.w  // r0.w <- spec_factor
                
                #line 19
                  mul r9.xyz, r9.xyzx, r1.xyzx
                  mul r11.xyz, r0.wwww, r9.xyzx
                
                #line 20
                endif 
                
                #line 22
                mul r7.xyz, r7.xyzx, r0.xyzx  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z
                
                #line 75 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Generic.fx"
                mov r7.xyz, r7.xyzx  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z
                mov r8.xyz, r8.xyzx  // r8.x <- d.x; r8.y <- d.y; r8.z <- d.z
                mov r11.xyz, r11.xyzx  // r11.x <- s.x; r11.y <- s.y; r11.z <- s.z
                
                #line 76
                add r4.xyz, r4.xyzx, r7.xyzx
                
                #line 77
                add r5.xyz, r5.xyzx, r8.xyzx
                
                #line 78
                add r6.xyz, r6.xyzx, r11.xyzx
                
                #line 80
                nop 
                mov r7.xyz, cb0[4].xyzx
                mov r8.xyz, cb0[5].xyzx
                mov r9.xyz, cb0[6].xyzx
                mov r10.xyz, cb0[7].xyzx
                mov r11.xyz, cb0[8].xyzx
                mov r0.w, cb0[6].w
                mov r1.w, cb0[7].w
                mov r2.xyz, r2.xyzx
                mov r12.xyz, v1.xyzx
                mov r3.xyz, r3.xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 28 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\LightFuncs.fx"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- ambient.x; r13.y <- ambient.y; r13.z <- ambient.z
                
                #line 29
                mov r14.xyz, l(0,0,0,0)  // r14.x <- diffuse.x; r14.y <- diffuse.y; r14.z <- diffuse.z
                
                #line 30
                mov r15.xyz, l(0,0,0,0)  // r15.x <- spec.x; r15.y <- spec.y; r15.z <- spec.z
                
                #line 32
                mov r12.xyz, -r12.xyzx
                add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- ptol.x; r10.y <- ptol.y; r10.z <- ptol.z
                
                #line 33
                dp3 r2.w, r10.xyzx, r10.xyzx
                sqrt r12.y, r2.w  // r12.y <- d
                
                #line 35
                lt r1.w, r1.w, r12.y
                
                #line 37
                if_z r1.w
                  div r10.xyz, r10.xyzx, r12.yyyy
                
                #line 39
                  mul r12.z, r12.y, r12.y
                  mov r12.x, l(1.000000)
                  dp3 r1.w, r11.xyzx, r12.xyzx
                  div r1.w, l(1.000000), r1.w  // r1.w <- att
                
                #line 41
                  mul r13.xyz, r7.xyzx, r0.xyzx
                
                #line 43
                  dp3 r2.w, r2.xyzx, r10.xyzx
                  max r2.w, r2.w, l(0.000000)  // r2.w <- diffuse_factor
                
                #line 44
                  mul r3.w, r1.w, r2.w
                  mul r0.xyz, r8.xyzx, r0.xyzx
                  mul r14.xyz, r0.xyzx, r3.wwww
                
                #line 46
                  lt r0.x, l(0.000000), r2.w
                  if_nz r0.x
                
                #line 48
                    mov r0.xyz, -r10.xyzx
                    dp3 r2.w, r0.xyzx, r2.xyzx
                    add r2.w, r2.w, r2.w
                    mov r2.w, -r2.w
                    mul r2.xyz, r2.wwww, r2.xyzx
                    add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- reflected.x; r0.y <- reflected.y; r0.z <- reflected.z
                
                #line 49
                    dp3 r0.x, r0.xyzx, r3.xyzx
                    max r0.x, r0.x, l(0.000000)
                    log r0.x, r0.x
                    mul r0.x, r0.x, r0.w
                    exp r0.x, r0.x  // r0.x <- spec_factor
                
                #line 51
                    mul r0.x, r1.w, r0.x
                    mul r0.yzw, r9.xxyz, r1.xxyz
                    mul r15.xyz, r0.yzwy, r0.xxxx
                
                #line 52
                  endif 
                endif 
                
                #line 80 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Generic.fx"
                mov r13.xyz, r13.xyzx  // r13.x <- a.x; r13.y <- a.y; r13.z <- a.z
                mov r14.xyz, r14.xyzx  // r14.x <- d.x; r14.y <- d.y; r14.z <- d.z
                mov r15.xyz, r15.xyzx  // r15.x <- s.x; r15.y <- s.y; r15.z <- s.z
                
                #line 81
                add r0.xyz, r4.xyzx, r13.xyzx  // r0.x <- ambient.x; r0.y <- ambient.y; r0.z <- ambient.z
                
                #line 82
                add r1.xyz, r5.xyzx, r14.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
                
                #line 83
                add r2.xyz, r6.xyzx, r15.xyzx  // r2.x <- spec.x; r2.y <- spec.y; r2.z <- spec.z
                
                #line 85
                add r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
                
                #line 86
                mov r0.w, cb1[0].w  // r0.w <- color.w
                
                #line 88
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 119 instruction slots used
                            
            };
        }

    }

}

