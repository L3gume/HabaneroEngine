//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDLight;           // Offset:    0, size:   64
    PointLight gPLight;                 // Offset:   64, size:   80
    float3  gEyePosW;                   // Offset:  144, size:   12
}

cbuffer cbPerObject
{
    float4x4 gViewProj;                 // Offset:    0, size:   64
    Material gMaterial;                 // Offset:   64, size:   48
}

cbuffer cbFixed
{
    float2  gTexCoords[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 2 local object(s)
//
SamplerState BillBoardTextureSampler
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(16);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D gDiffuseMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Tech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.posW.x; v0.y <- vin.posW.y; v0.z <- vin.posW.z; 
                //   v1.x <- vin.size.x; v1.y <- vin.size.y; 
                //   o1.x <- <VS return value>.size.x; o1.y <- <VS return value>.size.y; 
                //   o0.x <- <VS return value>.centerW.x; o0.y <- <VS return value>.centerW.y; o0.z <- <VS return value>.centerW.z
                //
                #line 63 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Billboard.fx"
                mov r0.xyz, v0.xyzx  // r0.x <- vout.centerW.x; r0.y <- vout.centerW.y; r0.z <- vout.centerW.z
                
                #line 64
                mov r1.xy, v1.xyxx  // r1.x <- vout.size.x; r1.y <- vout.size.y
                
                #line 66
                mov o0.xyz, r0.xyzx
                mov o1.xy, r1.xyxx
                ret 
                // Approximately 5 instruction slots used
                            
            };
            HullShader = NULL;
            DomainShader = NULL;
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDLight;                         // Offset:    0 Size:    64 [unused]
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //       float3 position;               // Offset:  112
                //       float range;                   // Offset:  124
                //       float3 att;                    // Offset:  128
                //       float pad;                     // Offset:  140
                //
                //   } gPLight;                         // Offset:   64 Size:    80 [unused]
                //   float3 gEyePosW;                   // Offset:  144 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //
                //   } gMaterial;                       // Offset:   64 Size:    48 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexCoords[4];              // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                // cbFixed                           cbuffer      NA          NA            cb2      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   x   
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID    uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[10], immediateIndexed
                dcl_constantbuffer CB1[4], immediateIndexed
                dcl_constantbuffer CB2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input vPrim
                dcl_temps 5
                dcl_indexableTemp x0[4], 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- triStream; 
                //   v[0][0].x <- gin[0].centerW.x; v[0][0].y <- gin[0].centerW.y; v[0][0].z <- gin[0].centerW.z; 
                //   v[0][1].x <- gin[0].size.x; v[0][1].y <- gin[0].size.y; 
                //   x0 <- v
                //
                #line 74 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Billboard.fx"
                mov r0.xyz, l(0,1.000000,0,0)  // r0.x <- up.x; r0.y <- up.y; r0.z <- up.z
                
                #line 75
                mov r1.xy, -v[0][0].xzxx
                add r1.xz, r1.xxyx, cb0[9].xxzx  // r1.x <- lookat.x; r1.z <- lookat.z
                
                #line 76
                mov r1.y, l(0)  // r1.y <- lookat.y
                
                #line 77
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx
                
                #line 78
                mul r2.xyz, r0.yzxy, r1.zxyz
                mul r3.xyz, r0.zxyz, r1.yzxy
                mov r3.xyz, -r3.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- right.x; r2.y <- right.y; r2.z <- right.z
                
                #line 80
                mul r0.w, l(0.500000), v[0][1].x
                mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- w.x; r2.y <- w.y; r2.z <- w.z
                
                #line 81
                mul r0.w, l(0.500000), v[0][1].x
                mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- h.x; r0.y <- h.y; r0.z <- h.z
                
                #line 84
                add r3.xyz, r2.xyzx, v[0][0].xyzx
                mov r4.xyz, -r0.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx
                mov r3.w, l(1.000000)
                mov x0[0].xyzw, r3.xyzw
                
                #line 85
                add r3.xyz, r2.xyzx, v[0][0].xyzx
                add r3.xyz, r0.xyzx, r3.xyzx
                mov r3.w, l(1.000000)
                mov x0[1].xyzw, r3.xyzw
                
                #line 86
                mov r3.xyz, -r2.xyzx
                add r3.xyz, r3.xyzx, v[0][0].xyzx
                mov r4.xyz, -r0.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx
                mov r3.w, l(1.000000)
                mov x0[2].xyzw, r3.xyzw
                
                #line 87
                mov r2.xyz, -r2.xyzx
                add r2.xyz, r2.xyzx, v[0][0].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx
                mov r0.w, l(1.000000)
                mov x0[3].xyzw, r0.xyzw
                
                #line 93
                mov r0.xyzw, x0[0].xyzw
                dp4 r2.x, r0.xyzw, cb1[0].xyzw  // r2.x <- gout.posH.x
                dp4 r2.y, r0.xyzw, cb1[1].xyzw  // r2.y <- gout.posH.y
                dp4 r2.z, r0.xyzw, cb1[2].xyzw  // r2.z <- gout.posH.z
                dp4 r2.w, r0.xyzw, cb1[3].xyzw  // r2.w <- gout.posH.w
                
                #line 94
                mov r0.xyz, x0[0].xyzx  // r0.x <- gout.posW.x; r0.y <- gout.posW.y; r0.z <- gout.posW.z
                
                #line 95
                mov r1.xyz, r1.xyzx  // r1.x <- gout.normalW.x; r1.y <- gout.normalW.y; r1.z <- gout.normalW.z
                
                #line 96
                mov r3.xy, cb2[0].xyxx  // r3.x <- gout.uv.x; r3.y <- gout.uv.y
                
                #line 97
                mov r0.w, vPrim  // r0.w <- gout.primID
                
                #line 98
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r0.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 93
                mov r0.xyzw, x0[1].xyzw
                dp4 r2.x, r0.xyzw, cb1[0].xyzw
                dp4 r2.y, r0.xyzw, cb1[1].xyzw
                dp4 r2.z, r0.xyzw, cb1[2].xyzw
                dp4 r2.w, r0.xyzw, cb1[3].xyzw
                
                #line 94
                mov r0.xyz, x0[1].xyzx  // r0.x <- gout.posW.x; r0.y <- gout.posW.y; r0.z <- gout.posW.z
                
                #line 96
                mov r3.xy, cb2[1].xyxx
                
                #line 97
                mov r0.w, vPrim  // r0.w <- gout.primID
                
                #line 98
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r0.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 93
                mov r0.xyzw, x0[2].xyzw
                dp4 r2.x, r0.xyzw, cb1[0].xyzw
                dp4 r2.y, r0.xyzw, cb1[1].xyzw
                dp4 r2.z, r0.xyzw, cb1[2].xyzw
                dp4 r2.w, r0.xyzw, cb1[3].xyzw
                
                #line 94
                mov r0.xyz, x0[2].xyzx  // r0.x <- gout.posW.x; r0.y <- gout.posW.y; r0.z <- gout.posW.z
                
                #line 96
                mov r3.xy, cb2[2].xyxx
                
                #line 97
                mov r0.w, vPrim  // r0.w <- gout.primID
                
                #line 98
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r0.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 93
                mov r0.xyzw, x0[3].xyzw
                dp4 r2.x, r0.xyzw, cb1[0].xyzw
                dp4 r2.y, r0.xyzw, cb1[1].xyzw
                dp4 r2.z, r0.xyzw, cb1[2].xyzw
                dp4 r2.w, r0.xyzw, cb1[3].xyzw
                
                #line 94
                mov r0.xyz, x0[3].xyzx  // r0.x <- gout.posW.x; r0.y <- gout.posW.y; r0.z <- gout.posW.z
                
                #line 96
                mov r3.xy, cb2[3].xyxx
                
                #line 97
                mov r0.w, vPrim  // r0.w <- gout.primID
                
                #line 98
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r0.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xy, r3.xyxx
                mov o4.x, r0.w
                emit_stream m0
                
                #line 100
                ret 
                // Approximately 93 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDLight;                         // Offset:    0 Size:    64
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //       float3 position;               // Offset:  112
                //       float range;                   // Offset:  124
                //       float3 att;                    // Offset:  128
                //       float pad;                     // Offset:  140
                //
                //   } gPLight;                         // Offset:   64 Size:    80
                //   float3 gEyePosW;                   // Offset:  144 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gViewProj;                // Offset:    0 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //
                //   } gMaterial;                       // Offset:   64 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // BillBoardTextureSampler           sampler      NA          NA             s0      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                // SV_PrimitiveID           0   x           4   PRIMID    uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[10], immediateIndexed
                dcl_constantbuffer CB1[5], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 16
                //
                // Initial variable locations:
                //   v0.x <- pin.posH.x; v0.y <- pin.posH.y; v0.z <- pin.posH.z; v0.w <- pin.posH.w; 
                //   v1.x <- pin.posW.x; v1.y <- pin.posW.y; v1.z <- pin.posW.z; 
                //   v2.x <- pin.normalW.x; v2.y <- pin.normalW.y; v2.z <- pin.normalW.z; 
                //   v3.x <- pin.uv.x; v3.y <- pin.uv.y; 
                //   v4.x <- pin.primID; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 104 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Billboard.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // r0.x <- mat_d.x; r0.y <- mat_d.y; r0.z <- mat_d.z
                
                #line 105
                itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- mat_s.x; r1.y <- mat_s.y; r1.z <- mat_s.z
                
                #line 108
                eq r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                movc r2.xyz, r2.xyzx, l(-1.000000,-1.000000,-1.000000,0), l(1.000000,1.000000,1.000000,0)
                lt r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r0.w, r2.y, r2.x
                or r0.w, r2.z, r0.w
                and r0.w, r0.w, l(-1)
                discard_nz r0.w
                
                #line 110
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, v2.xyzx  // r2.x <- pin.normalW.x; r2.y <- pin.normalW.y; r2.z <- pin.normalW.z
                
                #line 111
                mov r3.xyz, -v1.xyzx
                add r3.xyz, r3.xyzx, cb0[9].xyzx
                dp3 r0.w, r3.xyzx, r3.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, r3.xyzx  // r3.x <- ptoeye.x; r3.y <- ptoeye.y; r3.z <- ptoeye.z
                
                #line 113
                mov r4.xyz, l(0,0,0,0)  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 114
                mov r5.xyz, l(0,0,0,0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                
                #line 115
                mov r6.xyz, l(0,0,0,0)  // r6.x <- spec.x; r6.y <- spec.y; r6.z <- spec.z
                
                #line 118
                nop 
                mov r7.xyz, cb0[0].xyzx
                mov r8.xyz, cb0[1].xyzx
                mov r9.xyz, cb0[2].xyzx
                mov r0.w, cb0[2].w
                mov r10.xyz, cb0[3].xyzx
                mov r2.xyz, r2.xyzx
                mov r3.xyz, r3.xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 7 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\LightFuncs.fx"
                mov r11.xyz, l(0,0,0,0)  // r11.x <- spec.x; r11.y <- spec.y; r11.z <- spec.z
                
                #line 9
                dp3 r1.w, r10.xyzx, r2.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r12.xyz, r1.wwww, r2.xyzx
                add r12.xyz, r10.xyzx, r12.xyzx  // r12.x <- reflected.x; r12.y <- reflected.y; r12.z <- reflected.z
                
                #line 10
                dp3 r1.w, r12.xyzx, r12.xyzx
                rsq r1.w, r1.w
                mul r12.xyz, r1.wwww, r12.xyzx
                
                #line 12
                mov r10.xyz, -r10.xyzx
                dp3 r1.w, r10.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)  // r1.w <- diffuse_factor
                
                #line 13
                mul r8.xyz, r8.xyzx, r0.xyzx
                mul r8.xyz, r1.wwww, r8.xyzx  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z
                
                #line 15
                lt r1.w, l(0.000000), r1.w
                if_nz r1.w
                
                #line 17
                  dp3 r1.w, r12.xyzx, r3.xyzx
                  max r1.w, r1.w, l(0.000000)
                  log r1.w, r1.w
                  mul r0.w, r0.w, r1.w
                  exp r0.w, r0.w  // r0.w <- spec_factor
                
                #line 19
                  mul r9.xyz, r9.xyzx, r1.xyzx
                  mul r11.xyz, r0.wwww, r9.xyzx
                
                #line 20
                endif 
                
                #line 22
                mul r7.xyz, r7.xyzx, r0.xyzx  // r7.x <- ambient.x; r7.y <- ambient.y; r7.z <- ambient.z
                
                #line 118 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Billboard.fx"
                mov r7.xyz, r7.xyzx  // r7.x <- a.x; r7.y <- a.y; r7.z <- a.z
                mov r8.xyz, r8.xyzx  // r8.x <- d.x; r8.y <- d.y; r8.z <- d.z
                mov r11.xyz, r11.xyzx  // r11.x <- s.x; r11.y <- s.y; r11.z <- s.z
                
                #line 119
                add r4.xyz, r4.xyzx, r7.xyzx
                
                #line 120
                add r5.xyz, r5.xyzx, r8.xyzx
                
                #line 121
                add r6.xyz, r6.xyzx, r11.xyzx
                
                #line 123
                nop 
                mov r7.xyz, cb0[4].xyzx
                mov r8.xyz, cb0[5].xyzx
                mov r9.xyz, cb0[6].xyzx
                mov r10.xyz, cb0[7].xyzx
                mov r11.xyz, cb0[8].xyzx
                mov r0.w, cb0[6].w
                mov r1.w, cb0[7].w
                mov r2.xyz, r2.xyzx
                mov r12.xyz, v1.xyzx
                mov r3.xyz, r3.xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 28 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\LightFuncs.fx"
                mov r13.xyz, l(0,0,0,0)  // r13.x <- ambient.x; r13.y <- ambient.y; r13.z <- ambient.z
                
                #line 29
                mov r14.xyz, l(0,0,0,0)  // r14.x <- diffuse.x; r14.y <- diffuse.y; r14.z <- diffuse.z
                
                #line 30
                mov r15.xyz, l(0,0,0,0)  // r15.x <- spec.x; r15.y <- spec.y; r15.z <- spec.z
                
                #line 32
                mov r12.xyz, -r12.xyzx
                add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- ptol.x; r10.y <- ptol.y; r10.z <- ptol.z
                
                #line 33
                dp3 r2.w, r10.xyzx, r10.xyzx
                sqrt r12.y, r2.w  // r12.y <- d
                
                #line 35
                lt r1.w, r1.w, r12.y
                
                #line 37
                if_z r1.w
                  div r10.xyz, r10.xyzx, r12.yyyy
                
                #line 39
                  mul r12.z, r12.y, r12.y
                  mov r12.x, l(1.000000)
                  dp3 r1.w, r11.xyzx, r12.xyzx
                  div r1.w, l(1.000000), r1.w  // r1.w <- att
                
                #line 41
                  mul r13.xyz, r7.xyzx, r0.xyzx
                
                #line 43
                  dp3 r2.w, r2.xyzx, r10.xyzx
                  max r2.w, r2.w, l(0.000000)  // r2.w <- diffuse_factor
                
                #line 44
                  mul r3.w, r1.w, r2.w
                  mul r0.xyz, r8.xyzx, r0.xyzx
                  mul r14.xyz, r0.xyzx, r3.wwww
                
                #line 46
                  lt r0.x, l(0.000000), r2.w
                  if_nz r0.x
                
                #line 48
                    mov r0.xyz, -r10.xyzx
                    dp3 r2.w, r0.xyzx, r2.xyzx
                    add r2.w, r2.w, r2.w
                    mov r2.w, -r2.w
                    mul r2.xyz, r2.wwww, r2.xyzx
                    add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- reflected.x; r0.y <- reflected.y; r0.z <- reflected.z
                
                #line 49
                    dp3 r0.x, r0.xyzx, r3.xyzx
                    max r0.x, r0.x, l(0.000000)
                    log r0.x, r0.x
                    mul r0.x, r0.x, r0.w
                    exp r0.x, r0.x  // r0.x <- spec_factor
                
                #line 51
                    mul r0.x, r1.w, r0.x
                    mul r0.yzw, r9.xxyz, r1.xxyz
                    mul r15.xyz, r0.yzwy, r0.xxxx
                
                #line 52
                  endif 
                endif 
                
                #line 123 "C:\Users\msukka1\Documents\HabaneroEngine\Habanero\jahbal\shaders\Billboard.fx"
                mov r13.xyz, r13.xyzx  // r13.x <- a.x; r13.y <- a.y; r13.z <- a.z
                mov r14.xyz, r14.xyzx  // r14.x <- d.x; r14.y <- d.y; r14.z <- d.z
                mov r15.xyz, r15.xyzx  // r15.x <- s.x; r15.y <- s.y; r15.z <- s.z
                
                #line 124
                add r0.xyz, r4.xyzx, r13.xyzx  // r0.x <- ambient.x; r0.y <- ambient.y; r0.z <- ambient.z
                
                #line 125
                add r1.xyz, r5.xyzx, r14.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
                
                #line 126
                add r2.xyz, r6.xyzx, r15.xyzx  // r2.x <- spec.x; r2.y <- spec.y; r2.z <- spec.z
                
                #line 128
                add r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
                
                #line 129
                mov r0.w, cb1[4].w  // r0.w <- color.w
                
                #line 131
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 125 instruction slots used
                            
            };
        }

    }

}

